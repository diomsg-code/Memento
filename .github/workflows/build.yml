name: Publish 'Memento'
run-name: Publish 'Memento' (${{ github.event.inputs.release-type }})

on:
  workflow_dispatch:
    inputs:
      release-type:
        description: 'Art des Releases'
        required: true
        default: 'release'
        type: choice
        options:
          - Release
          - Alpha
      build-retail:
        description: 'Retail-Version'
        required: false
        default: true
        type: boolean
      build-classic:
        description: 'Classic-Version'
        required: false
        default: true
        type: boolean
      build-cata:
        description: 'Cata-Version'
        required: false
        default: true
        type: boolean
      full-changelog:
        description: 'vollstÃ¤ndiges Changelog'
        required: false
        default: true
        type: boolean

permissions:
  contents: write

jobs:
  prework:
    name: Prework
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.BOT_TOKEN }}
      GITHUB_REPOSITORY: ${{ github.repository }}
    outputs:
      last-release-tag: ${{ steps.tag.outputs.last_release_tag }}
      last-tag: ${{ steps.tag.outputs.last_tag }}
      new-tag: ${{ steps.tag.outputs.new_tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.BOT_TOKEN }}
          fetch-depth: 0
          persist-credentials: true
          
      - name: Import GPG key
        id: import-gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true
          git_push_gpgsign: false

      - name: Specify old Git tags and define a new Git tag
        id: tag
        run: |
          eval "$(python3 script/tag_define.py ${{ github.event.inputs.release-type }})"
          echo "last_release_tag=$LAST_RELEASE_TAG" >> $GITHUB_OUTPUT
          echo "last_tag=$LAST_TAG" >> $GITHUB_OUTPUT
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT

      - name: Extend FULL-CHANGELOG.md with the current release notes
        if: github.event.inputs.full-changelog == 'true'
        run: |
          python3 script/changelog_builder.py --version ${{ steps.tag.outputs.new_tag }} --name "${{ steps.import-gpg.outputs.name }}" --email ${{ steps.import-gpg.outputs.email }}

      - name: Get the latest version of main from the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch origin main
          git reset --hard origin/main

      - name: Set and push Git tag
        run: |
          python3 script/tag_push.py --tag ${{ steps.tag.outputs.new_tag }} --message "Release ${{ steps.tag.outputs.new_tag }}" --name "${{ steps.import-gpg.outputs.name }}" --email ${{ steps.import-gpg.outputs.email }}
  release-retail:
    name: Release Retail
    if: github.event.inputs.build-retail == 'true'
    runs-on: ubuntu-latest
    needs: prework
    env:
      CF_PROJECT_ID: ${{ vars.CF_PROJECT_ID }}
      WAGO_PROJECT_ID: ${{ vars.WAGO_PROJECT_ID }}
      GITHUB_OAUTH: ${{ secrets.G_TOKEN }}
      CF_API_KEY: ${{ secrets.CF_API_TOKEN }}
      WAGO_API_TOKEN: ${{ secrets.WAGO_API_TOKEN }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get the latest version of main from the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch origin main
          git reset --hard origin/main

      - name: Delay of 40 seconds
        run: |
          sleep 40

      - name: Package Retail
        run: |
          bash script/packager.sh --version ${{ needs.prework.outputs.new-tag }} --last-version ${{ needs.prework.outputs.last-tag }} --game retail
  release-cata:
    name: Release Cata
    if: github.event.inputs.build-cata == 'true'
    runs-on: ubuntu-latest
    needs: prework
    env:
      CF_PROJECT_ID: ${{ vars.CF_PROJECT_ID }}
      WAGO_PROJECT_ID: ${{ vars.WAGO_PROJECT_ID }}
      GITHUB_OAUTH: ${{ secrets.G_TOKEN }}
      CF_API_KEY: ${{ secrets.CF_API_TOKEN }}
      WAGO_API_TOKEN: ${{ secrets.WAGO_API_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get the latest version of main from the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch origin main
          git reset --hard origin/main

      - name: Delay of 20 seconds
        run: |
          sleep 20

      - name: Package Cata
        run: |
          bash script/packager.sh --version ${{ needs.prework.outputs.new-tag }} --last-version ${{ needs.prework.outputs.last-tag }} --game cata
  release-classic:
    name: Release Classic
    if: github.event.inputs.build-classic == 'true'
    runs-on: ubuntu-latest
    needs: prework
    env:
      CF_PROJECT_ID: ${{ vars.CF_PROJECT_ID }}
      WAGO_PROJECT_ID: ${{ vars.WAGO_PROJECT_ID }}
      GITHUB_OAUTH: ${{ secrets.G_TOKEN }}
      CF_API_KEY: ${{ secrets.CF_API_TOKEN }}
      WAGO_API_TOKEN: ${{ secrets.WAGO_API_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get the latest version of main from the repository
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git fetch origin main
          git reset --hard origin/main

      - name: Package Classic
        run: |
          bash script/packager.sh --version ${{ needs.prework.outputs.new-tag }} --last-version ${{ needs.prework.outputs.last-tag }} --game classic
