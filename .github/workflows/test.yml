on:
  workflow_dispatch:
    inputs:
      release-type:
        description: 'Art des Releases'
        required: true
        default: 'release'
        type: choice
        options:
          - Release
          - Alpha

permissions:
  contents: write

jobs:
  prework:
    name: Prework
    runs-on: ubuntu-latest
    env:
      GITHUB_REPOSITORY: ${{ github.repository }}
    outputs:
      last-release-tag: ${{ steps.tag.outputs.last_release_tag }}
      last-tag: ${{ steps.tag.outputs.last_tag }}
      new-tag: ${{ steps.tag.outputs.new_tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.BOT_TOKEN }}
          fetch-depth: 0
          persist-credentials: true

      - name: Import GPG key (Bot)
        id: import-gpg
        uses: crazy-max/ghaction-import-gpg@v6
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_user_signingkey: true
          git_commit_gpgsign: true
          git_tag_gpgsign: true
          git_push_gpgsign: false

      - name: Git configuration (Bot)
        run: |
          git config user.name "${{ steps.import-gpg.outputs.name }}"
          git config user.email "${{ steps.import-gpg.outputs.email }}"

      - name: Specify old Git tags and define a new Git tag
        id: tag
        run: |
          eval "$(python3 .build/script/test.py ${{ github.event.inputs.release-type }})"
          echo "last_release_tag=$LAST_RELEASE_TAG" >> $GITHUB_OUTPUT
          echo "last_tag=$LAST_TAG" >> $GITHUB_OUTPUT
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT

      - name: Set and push Git tag
        run: |
          python3 .build/script/tag_push.py --tag ${{ steps.tag.outputs.new_tag }} --message "Release ${{ steps.tag.outputs.new_tag }}"
