name: Publish 'Memento' Test

on:
  workflow_dispatch:
    inputs:
      releaseType:
        description: 'Art des Releases'
        required: true
        default: 'release'
        type: choice
        options:
          - Release
          - Alpha
      newVersionTag:
        description: 'Optional: neuer Tag'
        required: false
      oldVersionTag:
        description: 'Optional: alter Tag'
        required: false
      buildRetail:
        description: 'Retail-Version'
        required: false
        default: true
        type: boolean
      buildClassic:
        description: 'Classic-Version'
        required: false
        default: true
        type: boolean
      buildCata:
        description: 'Cata-Version'
        required: false
        default: true
        type: boolean
      createChangelog:
        description: 'vollstÃ¤ndiges Changelog'
        required: false
        default: true
        type: boolean

permissions:
  contents: write

jobs:
  prework:
    name: Prework
    runs-on: ubuntu-latest
    env:
      G_TOKEN: ${{ secrets.G_TOKEN }}
      GITHUB_REPOSITORY: ${{ github.repository }}
    outputs:
      last-release-tag: ${{ steps.tag.outputs.last_release_tag }}
      last-tag: ${{ steps.tag.outputs.last_tag }}
      new-tag: ${{ steps.tag.outputs.new_tag }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Bestimmme alte Git-Tags und definiere einen neuen Git-Tag
        id: tag
        run: |
          eval "$(python3 script/tag.py ${{ github.event.inputs.releaseType }})"
          echo "last_release_tag=$LAST_RELEASE_TAG" >> $GITHUB_OUTPUT
          echo "last_tag=$LAST_TAG" >> $GITHUB_OUTPUT
          echo "new_tag=$NEW_TAG" >> $GITHUB_OUTPUT

      - name: Setze und pushe Git-Tag
        run: |
          python3 script/tag_push.py ${{ steps.tag.outputs.new_tag }}
  release:
    name: Release
    runs-on: ubuntu-latest
    needs: prework
    env:
      CF_PROJECT_ID: ${{ vars.CF_PROJECT_ID }}
      WAGO_PROJECT_ID: ${{ vars.WAGO_PROJECT_ID }}
      CF_API_KEY: ${{ secrets.CF_API_KEY }}
      WAGO_API_TOKEN: ${{ secrets.WAGO_API_TOKEN }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Package Retail
        if: github.event.inputs.buildRetail == 'true'
        run: |
          bash script/packager.sh --version ${{ needs.prework.outputs.new-tag }} --game retail

      - name: Package Classic
        if: github.event.inputs.buildClassic == 'true'
        run: |
          bash script/packager.sh --version ${{ needs.prework.outputs.new-tag }} --game classic

      - name: Package Cata
        if: github.event.inputs.buildCata == 'true'
        run: |
          bash script/packager.sh --version ${{ needs.prework.outputs.new-tag }} --game cata